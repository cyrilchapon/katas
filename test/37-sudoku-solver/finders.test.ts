import { expect } from 'earljs'

import {
  findSingleCandidates,
  findTuplesCandidates
} from '../../src/37-sudoku-solver'

describe('SudokuSolver', () => {
  describe('Finders', () => {
    describe('findSingleCandidates', () => {
      it('should return consistent', () => {
        const input = [
          [['1', '2'], ['1', '2'], [], [], [], [], [], [], []],
          [['2'], ['2'], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], ['1'], [], [], [], [], [], [], []]
        ]

        const actual = findSingleCandidates(input)
        const expected = [
          [['1'], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], ['1'], [], [], [], [], [], [], []]
        ]

        expect(actual).toEqual(expected)
      })
    })

    describe('findTuplesCandidates(2)', () => {
      it('should return consistent', () => {
        const input = [
          [['1', '2', '3'], ['1', '2'], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], ['4', '6', '8']],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], ['3', '7', '9'], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], ['2', '7', '9'], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], ['2', '5', '6', '8']],
          [[], [], [], [], [], [], [], [], []]
        ]

        const actual = findTuplesCandidates(2)(input)
        const expected = {
          row: [
            [['1', '2'], ['1', '2'], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []]
          ],
          col: [
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], ['6', '8'], [], [], [], [], [], ['6', '8'], []]
          ],
          square: [
            [['1', '2'], ['1', '2'], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [['7', '9'], [], [], [], [], [], [], [], ['7', '9']],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []]
          ]
        }

        expect(actual.row).toEqual(expected.row)
        expect(actual.col).toEqual(expected.col)
        expect(actual.square).toEqual(expected.square)
      })
    })

    describe('findTuplesCandidates(3)', () => {
      it('should return consistent', () => {
        const input = [
          [['1', '2', '3', '4'], ['1', '2', '3'], [], [], [], ['1', '2'], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], ['3', '5', '7', '2', '8']],
          [[], [], [], [], ['7', '6'], [], [], [], []],
          [[], [], [], ['4', '6', '2'], [], [], [], [], []],
          [[], [], [], [], [], ['4', '7', '1'], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], ['8']],
          [[], [], [], [], [], [], [], [], ['8', '5', '3']]
        ]

        const actual = findTuplesCandidates(3)(input)
        const expected = {
          row: [
            [['1', '2', '3'], ['1', '2', '3'], [], [], [], ['1', '2', '3'], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []]
          ],
          col: [
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], ['3', '5', '8'], [], [], [], [], ['3', '5', '8'], ['3', '5', '8']]
          ],
          square: [
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], ['4', '6', '7'], [], ['4', '6', '7'], [], [], [], [], ['4', '6', '7']],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []]
          ]
        }

        expect(actual.row).toEqual(expected.row)
        expect(actual.col).toEqual(expected.col)
        expect(actual.square).toEqual(expected.square)
      })
    })

    describe('findTuplesCandidates(4)', () => {
      it('should return consistent', () => {
        const input = [
          [['1', '2', '3', '4', '5'], ['1', '2', '3', '4'], ['2', '3'], [], [], ['1', '4'], [], [], []],
          [[], [], [], [], [], [], [], [], []],
          [[], [], [], [], [], [], [], [], ['2', '3', '5', '7', '8']],
          [[], [], [], [], ['6', '7'], ['2', '6'], [], [], []],
          [[], [], [], ['2', '4', '6'], [], [], [], [], []],
          [[], [], [], [], [], ['1', '4', '7'], [], [], []],
          [[], [], [], [], [], [], [], [], ['1', '3', '7']],
          [[], [], [], [], [], [], [], [], ['5', '8']],
          [[], [], [], [], [], [], [], [], ['3', '5', '8']]
        ]

        const actual = findTuplesCandidates(4)(input)
        const expected = {
          row: [
            [['1', '2', '3', '4'], ['1', '2', '3', '4'], ['1', '2', '3', '4'], [], [], ['1', '2', '3', '4'], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []]
          ],
          col: [
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], ['3', '5', '7', '8'], [], [], [], ['3', '5', '7', '8'], ['3', '5', '7', '8'], ['3', '5', '7', '8']]
          ],
          square: [
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], ['2', '4', '6', '7'], ['2', '4', '6', '7'], ['2', '4', '6', '7'], [], [], [], [], ['2', '4', '6', '7']],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []],
            [[], [], [], [], [], [], [], [], []]
          ]
        }

        expect(actual.row).toEqual(expected.row)
        expect(actual.col).toEqual(expected.col)
        expect(actual.square).toEqual(expected.square)
      })
    })
  })
})